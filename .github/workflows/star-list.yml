name: Update stars list

on:
  # 只在手动触发和定时任务时运行
  workflow_dispatch:
  schedule:
    # 每周三12点更新（减少频率）
    - cron: '0 12 * * 3'
  # 移除 push 和 watch 触发器以避免频繁运行

# Sets permissions of the GITHUB_TOKEN to allow reading repo and writing to repo
permissions:
  contents: write

jobs:
  update-stars:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          
      # 备份当前的数据文件
      - name: Backup current data
        run: |
          if [ -f "data.json" ]; then
            cp data.json data.json.backup
          fi
          
      - name: Generate stars list
        uses: simonecorsi/mawesome@v2
        with:
          api-token: ${{ secrets.PERSONAL_TOKEN }}
          github-email: ${{ secrets.USER_EMAIL }}
          template-path: "template/README.ejs"
          github-name: ${{ github.repository_owner }}
          
      # 检查数据是否有实际变化
      - name: Check for changes
        id: check_changes
        run: |
          if [ -f "data.json.backup" ]; then
            if cmp -s "data.json" "data.json.backup"; then
              echo "has_changes=false" >> $GITHUB_OUTPUT
              echo "数据没有变化，跳过提交"
            else
              echo "has_changes=true" >> $GITHUB_OUTPUT
              echo "检测到数据变化，准备提交"
            fi
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "首次运行或数据文件不存在，准备提交"
          fi
          
      # 只有在有变化时才提交
      - name: Commit changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "${{ secrets.USER_EMAIL }}"
          git config --local user.name "${{ github.repository_owner }}"
          git add .
          git diff --staged --quiet || git commit -m "chore: update starred repositories $(date +'%Y-%m-%d')"
          git push
